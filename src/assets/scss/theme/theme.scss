@import "../utils/vars";

.theme-dark {
  background-color: $black;
}

.theme-light {
  background-color: transparent;
}

$themes: (
  light: (
    backgroundColor: $white,
    sectionTextColor: $greyb8,
    textColor: $grey,
    headerTextColor: $black17,
    linkColor: $black17,
    animationBgc: $black,
    arrowBgc: url("/assets/img/icon/arrow_link_black.svg") center no-repeat transparent,

    rangeColorActive: $grey30,
    rangeColor: $greyb8,

    rangeElmBgcActive: $grey30,
    rangeElmBgc: $greyb8,

    rangeBgArrow: url("/assets/img/icon/arrow_slider_black.svg") center/contain no-repeat transparent
  ),
  dark: (
    backgroundColor: $black,
    sectionTextColor: $grey40_invert,
    textColor: $grey8c,
    headerTextColor: $greyE2,
    linkColor: $greyCC_invert,
    animationBgc: $white,
    arrowBgc: url("/assets/img/icon/arrow_link_grey.svg") center no-repeat transparent,


    rangeColorActive: $greyE2,
    rangeColor: $grey62,

    rangeElmBgcActive: $greyE2,
    rangeElmBgc: $grey62,

    rangeBgArrow: url("/assets/img/icon/arrow_slider_white.svg") center/contain no-repeat transparent
  ),
);

/*
 * Implementation of themes
 */
@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
